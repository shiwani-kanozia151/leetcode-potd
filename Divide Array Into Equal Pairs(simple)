2206. Divide Array Into Equal Pairs

https://leetcode.com/problems/divide-array-into-equal-pairs/description/?envType=daily-question&envId=2025-03-17

You are given an integer array nums consisting of 2 * n integers.
You need to divide nums into n pairs such that:
i. Each element belongs to exactly one pair.
ii. The elements present in a pair are equal.
Return true if nums can be divided into n pairs, otherwise return false.

Example 1:
Input: nums = [3,2,3,2,2,2]
Output: true
Explanation: 
There are 6 elements in nums, so they should be divided into 6 / 2 = 3 pairs.
If nums is divided into the pairs (2, 2), (3, 3), and (2, 2), it will satisfy all the conditions.

Example 2:
Input: nums = [1,2,3,4]
Output: false
Explanation: 
There is no way to divide nums into 4 / 2 = 2 pairs such that the pairs satisfy every condition.
 
Constraints:

nums.length == 2 * n
1 <= n <= 500
1 <= nums[i] <= 500

APPROACH:

sort the given array and as according to question it is given that we will get n/2 pairs only so every pair will contains 2 elements only so based on that i will run a 
while loop and inside it write the logic to solve the problem...

CODE:

class Solution {
public:
    bool divideArray(vector<int>& nums) {
         
         int n=nums.size();
         int pairs=n/2;
         int count=0;
        
        sort(nums.begin(), nums.end());

         int i=0;
  
         while(i<n)
         {
            if(nums[i]==nums[i+1])
              count++;
            else 
             return false;

            i=i+2;
         }

         if(count==pairs)
          return true;

         return false; 
    }
};
