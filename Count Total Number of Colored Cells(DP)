2579. Count Total Number of Colored Cells

https://leetcode.com/problems/count-total-number-of-colored-cells/description/?envType=daily-question&envId=2025-03-05

There exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer n, indicating that you must do the following routine for n minutes:
At the first minute, color any arbitrary unit cell blue.
Every minute thereafter, color blue every uncolored cell that touches a blue cell.
Below is a pictorial representation of the state of the grid after minutes 1, 2, and 3.
Return the number of colored cells at the end of n minutes.

Example 1:
Input: n = 1
Output: 1
Explanation: After 1 minute, there is only 1 blue cell, so we return 1.

Example 2:
Input: n = 2
Output: 5
Explanation: After 2 minutes, there are 4 colored cells on the boundary and 1 in the center, so we return 5. 
 
Constraints:
1 <= n <= 10^5

APPROACH:
i find the paatern in the number of cells to get colored using sequence and series and based on that i got a series of 1, 5, 13, 25, 41, 61, 85, 113. 
here in this series the the difference is like 4, 8, 12, 16, 20, 24, 28, 32, 36, ....

so i made a dp array and in that array dp[0]=1;
 and for the rest running a loop and dp[i]=dp[i-1]+4*i;

CODE:

class Solution {
public:
    long long coloredCells(int n) {

       vector<long long>dp(n+1);
       dp[0]=1;

       for(int i=1; i<n; i++)
       {
          dp[i]=dp[i-1]+4*i;
       }
       return dp[n-1];  
    }
};
